#include<iostream>
#include<cstdlib>
#include<cstring>
#include<ctime>
#include"red_polje.h"
//#include"red_pokazivac.h"
using namespace std;

red *glavni=new red;
red *pom=new red;
pacijent e, Ispis[100];
int i=0, br=0, brojac;

void generiranje(tpetorke *petorke, int n){
    for(int x=0; x<n; x++){
        petorke[x].ai=rand()%250+50;
        petorke[x].bi=rand()%250+50;
        petorke[x].ci=rand()%5+1;
        if(petorke[x].ci==1)petorke[x].di=rand()%2+1;
        else petorke[x].di=rand()%4+1;
        if(petorke[x].ci==1)petorke[x].ei=rand()%4+2;
        else if(petorke[x].ci==3)petorke[x].ei=rand()%4+1;
        else if(petorke[x].ci==4)petorke[x].ei=rand()%3+1;
        else petorke[x].ei=rand()%5+1;
        if(petorke[x].di!=1) petorke[x].ei=1;
    }
}
void ispis(){
    cout<<"Ime i Prezime: "<<e.ime<<" "<<e.pre<<endl;
    cout<<"Datum rodjenja: "<<e.dan<<"."<<e.mj<<"."<<e.god<<endl;
    cout<<"Spol "<<e.spol<<endl;
    cout<<"Prioritet: ";
    switch (e.pet.ci){
        case 1: cout<<"Hitni slucaj"<<endl; break;
        case 2: cout<<"Invalid"<<endl; break;
        case 3: cout<<"Trudnica"<<endl; break;
        case 4: cout<<"Djete mladje od 6g."<<endl; break;
        case 5: cout<<"Obican pacijent"<<endl; break;
    }
    cout<<"Vrsta usluge: ";
    switch (e.pet.di){
        case 1: cout<<"Pregled"<<endl; break;
        case 2: cout<<"Previjanje"<<endl; break;
        case 3: cout<<"Recept"<<endl; break;
        case 4: cout<<"Uputnica"<<endl; break;
    }
    cout<<"Vrsta ordinacije: ";
    switch (e.pet.ei){
        case 1: cout<<"Obiteljska medicina"<<endl; break;
        case 2: cout<<"Oftamologia"<<endl; break;
        case 3: cout<<"Dermatovenerologija"<<endl; break;
        case 4: cout<<"Ginekologija"<<endl; break;
        case 5: cout<<"Urologija"<<endl; break;
    }
    cout<<"-------------------------------------"<<endl;
}
void unos(tpetorke *pet, int n){
    short a=0, b=0, c=0, d=0;
    do{
        cout<<"Unesi ime pacijenta: ";
        cin.ignore();
        cin.getline(e.ime,20);
        cout<<"Unesi prezime pacijenta: ";
        cin.getline(e.pre,30);
        cout<<"Unesi datum rodjenja: "<<endl;
        cout<<"Dan: ";
        cin>>e.dan;
        cout<<"Mjesec: ";
        cin>>e.mj;
        cout<<"Godina: ";
        cin>>e.god;
        cout<<"Unesi spol pacijenta:(M/Z) ";
        cin>>e.spol;
        e.pet=pet[i];
        switch (e.pet.di){
            case 1: a++; break;
            case 2: b++; break;
            case 3: c++; break;
            case 4: d++; break;
        }
        EnQueueQ(e,glavni);
        cout<<a<<" "<<b<<" "<<c<<" "<<d<<endl;
        cout<<"-----------------------"<<endl;
        //sort(glavni, i);
        i++; br++;
     }while((a<1 || b<1 || c<1 || d<1) && i<n);
     cout<<endl<<"Pacijentice starije od 25g. koje cekaju pregled kod oftamologa:"<<endl;
     cout<<"___________________________________________________________"<<endl;
     InitQ(pom);
     while(!IsEmptyQ(glavni)){
        e=FrontQ(glavni);
        EnQueueQ(e,pom);
        if((e.spol=='Z'||e.spol=='z') && e.god<1988 && e.pet.ei==2) ispis();
        DeQueueQ(glavni);
     }
     InitQ(glavni);
     while(!IsEmptyQ(pom)){
        e=FrontQ(pom);
        EnQueueQ(e,glavni);
        DeQueueQ(pom);
     }
}
void brisanje_invalida(){
     cout<<endl<<"Brisanje invalida starijih od 50 godina koji kod lijecnika obiteljske medicine cekaju na previjanje:"<<endl;
     cout<<"___________________________________________________________"<<endl;
     InitQ(pom);
     while(!IsEmptyQ(glavni)){
        e=FrontQ(glavni);
        if(e.pet.ci==2 && e.god<1963 && e.pet.di==2 && e.pet.ei==1) ispis();
        else EnQueueQ(e,pom);
        DeQueueQ(glavni);
     }
     InitQ(glavni);
     while(!IsEmptyQ(pom)){
        e=FrontQ(pom);
        EnQueueQ(e,glavni);
        DeQueueQ(pom);
     }
}
void novi_red(){
    if(brojac--){
        e=FrontQ(glavni);
        ispis();
        DeQueueQ(glavni);
        novi_red();
    }
}
void provjera(){
     while(!IsEmptyQ(glavni)){
        e=FrontQ(glavni);
        ispis();
        EnQueueQ(e,pom);
        DeQueueQ(glavni);
     }
     InitQ(glavni);
     while(!IsEmptyQ(pom)){
        e=FrontQ(pom);
        EnQueueQ(e,glavni);
        DeQueueQ(pom);
     }
}
int main(){
    int N;
    short izbor;
    bool zas=true;
    tpetorke *petorke;
    srand(time(NULL));
    cout<<"Unesi broj N za generiranje N petorki: ";
    cin>>N;
    petorke=new tpetorke[N];
    generiranje(petorke, N);
    int y;
    do{
        cout<<"************************IZBORNIK************************"<<endl;
        cout<<"1. Dodavanje zapisa o pacijenata poliklinike u red"<<endl;
        cout<<"2. Brisanje invalida starijih od 50 godina koji cekaju na previjanje"<<endl;
        cout<<"3. Simulacija reda brzih usluga"<<endl;
        cout<<"4. Provjera stanja glavnog reda"<<endl;
        cout<<"0. IZLAZ iz programa"<<endl;
        cout<<"--------------------------------------------------------"<<endl;
        cout<<"Unesi svoj izbor: ";
        cin>>izbor;
        system("cls");
        switch (izbor){
            case 1:
                if(zas) InitQ(glavni);
                unos(petorke, N);
                zas=false;
                break;
            case 2:
                brisanje_invalida();
                break;
            case 3:
                brojac=br*0.6;
                cout<<endl<<"Glavni red u poliklinici:"<<endl;
                cout<<"_________________________________________________________"<<endl;
                novi_red();
                y=0;
                while(!IsEmptyQ(glavni)){
                    e=FrontQ(glavni);
                    if(e.pet.di>2) Ispis[y++]=e;
                    else ispis();
                    DeQueueQ(glavni);
                 }
                 cout<<endl<<"Novi red brzih usluga (recepti i uputnice):"<<endl;
                 cout<<"___________________________"<<endl;
                 for(int x=y-1; x>=0; x--){
                    e=Ispis[x];
                    ispis();
                 }
                 break;
            case 4:
                provjera();
                break;
        }
    }while(izbor);
    system("pause");
    return 0;
}
